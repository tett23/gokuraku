---
source: packages/parser/tests/pds_test.rs
expression: ast
input_file: packages/parser/fixtures/pds/prelude.pds
---
Module {
    statements: [
        InstDef(
            InstDef {
                ident: InstIdent(
                    "@atomic",
                ),
                expr: TypeExpr {
                    constraints: [],
                    expr: Literal(
                        Tuple(
                            0,
                            [],
                        ),
                    ),
                },
            },
        ),
        InstDef(
            InstDef {
                ident: InstIdent(
                    "@write",
                ),
                expr: TypeExpr {
                    constraints: [],
                    expr: Arrow(
                        Literal(
                            Ident(
                                ExistsIdent(
                                    ExistsIdent(
                                        "Char",
                                    ),
                                ),
                            ),
                        ),
                        Literal(
                            Context(
                                ExistsIdent(
                                    ExistsIdent(
                                        "IO",
                                    ),
                                ),
                                Literal(
                                    Tuple(
                                        0,
                                        [],
                                    ),
                                ),
                            ),
                        ),
                    ),
                },
            },
        ),
        InstDef(
            InstDef {
                ident: InstIdent(
                    "@read",
                ),
                expr: TypeExpr {
                    constraints: [],
                    expr: Arrow(
                        Literal(
                            Tuple(
                                0,
                                [],
                            ),
                        ),
                        Literal(
                            Context(
                                ExistsIdent(
                                    ExistsIdent(
                                        "IO",
                                    ),
                                ),
                                Literal(
                                    Ident(
                                        ExistsIdent(
                                            ExistsIdent(
                                                "Char",
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ),
                    ),
                },
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [
                    Nominal,
                ],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "True",
                    ),
                ),
                args: [],
                expr: Value(
                    Unit,
                ),
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [
                    Nominal,
                ],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "False",
                    ),
                ),
                args: [],
                expr: Value(
                    Unit,
                ),
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Bool",
                    ),
                ),
                args: [],
                expr: Or(
                    Value(
                        TypeIdent(
                            ExistsIdent(
                                ExistsIdent(
                                    "True",
                                ),
                            ),
                        ),
                    ),
                    Value(
                        TypeIdent(
                            ExistsIdent(
                                ExistsIdent(
                                    "False",
                                ),
                            ),
                        ),
                    ),
                ),
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Option",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                ],
                expr: Or(
                    Value(
                        Context(
                            ExistsIdent(
                                ExistsIdent(
                                    "Some",
                                ),
                            ),
                            [
                                ForallIdent(
                                    ForallIdent(
                                        "a",
                                    ),
                                ),
                            ],
                        ),
                    ),
                    Value(
                        TypeIdent(
                            ExistsIdent(
                                ExistsIdent(
                                    "Nil",
                                ),
                            ),
                        ),
                    ),
                ),
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Either",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                    ForallIdent(
                        ForallIdent(
                            "b",
                        ),
                    ),
                ],
                expr: Or(
                    Value(
                        Context(
                            ExistsIdent(
                                ExistsIdent(
                                    "Left",
                                ),
                            ),
                            [
                                ForallIdent(
                                    ForallIdent(
                                        "a",
                                    ),
                                ),
                            ],
                        ),
                    ),
                    Value(
                        Context(
                            ExistsIdent(
                                ExistsIdent(
                                    "Right",
                                ),
                            ),
                            [
                                ForallIdent(
                                    ForallIdent(
                                        "b",
                                    ),
                                ),
                            ],
                        ),
                    ),
                ),
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Result",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                    ForallIdent(
                        ForallIdent(
                            "b",
                        ),
                    ),
                ],
                expr: Or(
                    Value(
                        Context(
                            ExistsIdent(
                                ExistsIdent(
                                    "Ok",
                                ),
                            ),
                            [
                                ForallIdent(
                                    ForallIdent(
                                        "a",
                                    ),
                                ),
                            ],
                        ),
                    ),
                    Value(
                        Context(
                            ExistsIdent(
                                ExistsIdent(
                                    "Err",
                                ),
                            ),
                            [
                                ForallIdent(
                                    ForallIdent(
                                        "b",
                                    ),
                                ),
                            ],
                        ),
                    ),
                ),
            },
        ),
        TraitDef(
            TraitDef {
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Show",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "show",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Literal(
                                            Ident(
                                                ExistsIdent(
                                                    ExistsIdent(
                                                        "Text",
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                    ],
                },
            },
        ),
        DataAssign(
            DataAssign {
                modifiers: [],
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Ordering",
                    ),
                ),
                args: [],
                expr: Or(
                    Value(
                        TypeIdent(
                            ExistsIdent(
                                ExistsIdent(
                                    "LT",
                                ),
                            ),
                        ),
                    ),
                    Or(
                        Value(
                            TypeIdent(
                                ExistsIdent(
                                    ExistsIdent(
                                        "EQ",
                                    ),
                                ),
                            ),
                        ),
                        Value(
                            TypeIdent(
                                ExistsIdent(
                                    ExistsIdent(
                                        "GT",
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
            },
        ),
        TraitDef(
            TraitDef {
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "PartialOrd",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                    ForallIdent(
                        ForallIdent(
                            "b",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "partialCmp",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Context(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Option",
                                                        ),
                                                    ),
                                                    Literal(
                                                        Ident(
                                                            ExistsIdent(
                                                                ExistsIdent(
                                                                    "Ordering",
                                                                ),
                                                            ),
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "(<)",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Bool",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "(<=)",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Bool",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "(>)",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Bool",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "(>=)",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Bool",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                    ],
                },
            },
        ),
        TraitDef(
            TraitDef {
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "PartialEq",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                    ForallIdent(
                        ForallIdent(
                            "b",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "(==)",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Bool",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "(!=)",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Bool",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                    ],
                },
            },
        ),
        TraitDef(
            TraitDef {
                constraints: [
                    Constraint {
                        ident: ExistsIdent(
                            ExistsIdent(
                                "PartialEq",
                            ),
                        ),
                        args: [
                            ForallIdent(
                                ForallIdent(
                                    "a",
                                ),
                            ),
                        ],
                    },
                ],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Eq",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [],
                },
            },
        ),
        TraitDef(
            TraitDef {
                constraints: [
                    Constraint {
                        ident: ExistsIdent(
                            ExistsIdent(
                                "PartialEq",
                            ),
                        ),
                        args: [
                            ForallIdent(
                                ForallIdent(
                                    "a",
                                ),
                            ),
                        ],
                    },
                    Constraint {
                        ident: ExistsIdent(
                            ExistsIdent(
                                "Eq",
                            ),
                        ),
                        args: [
                            ForallIdent(
                                ForallIdent(
                                    "a",
                                ),
                            ),
                        ],
                    },
                ],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Ord",
                    ),
                ),
                args: [
                    ForallIdent(
                        ForallIdent(
                            "a",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "cmp",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ExistsIdent(
                                                        ExistsIdent(
                                                            "Ordering",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "max",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "min",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                        AssignDef(
                            AssignDef {
                                eta_envs: EtaEnvs(
                                    [],
                                ),
                                ident: Ident(
                                    "clamp",
                                ),
                                expr: TypeExpr {
                                    constraints: [],
                                    expr: Arrow(
                                        Literal(
                                            Ident(
                                                ForallIdent(
                                                    ForallIdent(
                                                        "a",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        Arrow(
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Literal(
                                                Ident(
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                },
                            },
                        ),
                    ],
                },
            },
        ),
        ImplTrait(
            ImplTrait {
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Show",
                    ),
                ),
                args: [
                    ExistsIdent(
                        ExistsIdent(
                            "Int",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [
                        LineComment(
                            LineComment(
                                "lineComment(766, 776)",
                            ),
                        ),
                        Assign(
                            Assign {
                                ident: Ident(
                                    "show",
                                ),
                                args: AssignArgs {
                                    patterns: [
                                        Bind(
                                            Ident(
                                                "a",
                                            ),
                                        ),
                                    ],
                                },
                                expr: Literal(
                                    Text(
                                        "",
                                    ),
                                ),
                                where_clause: Module {
                                    statements: [],
                                },
                            },
                        ),
                    ],
                },
            },
        ),
        ImplTrait(
            ImplTrait {
                constraints: [],
                ident: ExistsIdent(
                    ExistsIdent(
                        "Show",
                    ),
                ),
                args: [
                    ExistsIdent(
                        ExistsIdent(
                            "Bool",
                        ),
                    ),
                ],
                where_clause: Module {
                    statements: [
                        Assign(
                            Assign {
                                ident: Ident(
                                    "show",
                                ),
                                args: AssignArgs {
                                    patterns: [
                                        TypeIdent(
                                            ExistsIdent(
                                                ExistsIdent(
                                                    "True",
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                                expr: Literal(
                                    Text(
                                        "True",
                                    ),
                                ),
                                where_clause: Module {
                                    statements: [],
                                },
                            },
                        ),
                        Assign(
                            Assign {
                                ident: Ident(
                                    "show",
                                ),
                                args: AssignArgs {
                                    patterns: [
                                        TypeIdent(
                                            ExistsIdent(
                                                ExistsIdent(
                                                    "False",
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                                expr: Literal(
                                    Text(
                                        "False",
                                    ),
                                ),
                                where_clause: Module {
                                    statements: [],
                                },
                            },
                        ),
                    ],
                },
            },
        ),
    ],
}
