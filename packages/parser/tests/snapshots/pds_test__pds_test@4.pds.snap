---
source: packages/parser/tests/pds_test.rs
expression: ast
input_file: packages/parser/fixtures/pds/4.pds
---
Module {
    statements: [
        AssignDef(
            AssignDef {
                ident: Ident(
                    "main",
                ),
                expr: TypeExpr {
                    trait_constraints: [],
                    eta_envs: EtaEnvs(
                        [
                            EtaEnv {
                                ident: HandlerIdent(
                                    "write",
                                ),
                                expr: CoroutineType {
                                    resume: Arrow(
                                        Literal(
                                            Constructor(
                                                DataConstructor {
                                                    modifier: None,
                                                    ident: ExistsIdent(
                                                        ExistsIdent(
                                                            "Text",
                                                        ),
                                                    ),
                                                    args: [],
                                                },
                                            ),
                                        ),
                                        Literal(
                                            Constructor(
                                                DataConstructor {
                                                    modifier: None,
                                                    ident: ExistsIdent(
                                                        ExistsIdent(
                                                            "IO",
                                                        ),
                                                    ),
                                                    args: [],
                                                },
                                            ),
                                        ),
                                    ),
                                    ret: Literal(
                                        Constructor(
                                            DataConstructor {
                                                modifier: None,
                                                ident: ExistsIdent(
                                                    ExistsIdent(
                                                        "IO",
                                                    ),
                                                ),
                                                args: [],
                                            },
                                        ),
                                    ),
                                },
                            },
                        ],
                    ),
                    expr: Literal(
                        Constructor(
                            DataConstructor {
                                modifier: None,
                                ident: ExistsIdent(
                                    ExistsIdent(
                                        "IO",
                                    ),
                                ),
                                args: [],
                            },
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "main",
                ),
                args: AssignArgs {
                    patterns: [],
                },
                expr: Ident(
                    Ident(
                        "resume",
                    ),
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
    ],
}
