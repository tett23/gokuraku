---
source: packages/parser/tests/pds_test.rs
expression: ast
input_file: packages/parser/fixtures/pds/3.pds
---
Module {
    statements: [
        AssignDef(
            AssignDef {
                ident: Ident(
                    "(|)",
                ),
                expr: TypeExpr {
                    trait_constraints: [],
                    eta_envs: EtaEnvs(
                        [],
                    ),
                    expr: Arrow(
                        Literal(
                            Constructor(
                                DataConstructor {
                                    modifier: None,
                                    ident: ForallIdent(
                                        ForallIdent(
                                            "a",
                                        ),
                                    ),
                                    args: [],
                                },
                            ),
                        ),
                        Arrow(
                            Arrow(
                                Literal(
                                    Constructor(
                                        DataConstructor {
                                            modifier: None,
                                            ident: ForallIdent(
                                                ForallIdent(
                                                    "a",
                                                ),
                                            ),
                                            args: [],
                                        },
                                    ),
                                ),
                                Literal(
                                    Constructor(
                                        DataConstructor {
                                            modifier: None,
                                            ident: ForallIdent(
                                                ForallIdent(
                                                    "b",
                                                ),
                                            ),
                                            args: [],
                                        },
                                    ),
                                ),
                            ),
                            Literal(
                                Constructor(
                                    DataConstructor {
                                        modifier: None,
                                        ident: ForallIdent(
                                            ForallIdent(
                                                "b",
                                            ),
                                        ),
                                        args: [],
                                    },
                                ),
                            ),
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "(|)",
                ),
                args: AssignArgs {
                    patterns: [
                        Bind(
                            Ident(
                                "f",
                            ),
                        ),
                        Bind(
                            Ident(
                                "g",
                            ),
                        ),
                    ],
                },
                expr: Ident(
                    Ident(
                        "g",
                    ),
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
        AssignDef(
            AssignDef {
                ident: Ident(
                    "echo",
                ),
                expr: TypeExpr {
                    trait_constraints: [
                        TraitConstraint {
                            ident: TraitIdent(
                                "Show",
                            ),
                            arg: ForallIdent(
                                "a",
                            ),
                        },
                    ],
                    eta_envs: EtaEnvs(
                        [],
                    ),
                    expr: Arrow(
                        Literal(
                            Constructor(
                                DataConstructor {
                                    modifier: None,
                                    ident: ForallIdent(
                                        ForallIdent(
                                            "a",
                                        ),
                                    ),
                                    args: [],
                                },
                            ),
                        ),
                        Literal(
                            Constructor(
                                DataConstructor {
                                    modifier: None,
                                    ident: ExistsIdent(
                                        ExistsIdent(
                                            "IO",
                                        ),
                                    ),
                                    args: [],
                                },
                            ),
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "echo",
                ),
                args: AssignArgs {
                    patterns: [
                        Bind(
                            Ident(
                                "a",
                            ),
                        ),
                    ],
                },
                expr: Ident(
                    Ident(
                        "write",
                    ),
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
        AssignDef(
            AssignDef {
                ident: Ident(
                    "main",
                ),
                expr: TypeExpr {
                    trait_constraints: [],
                    eta_envs: EtaEnvs(
                        [],
                    ),
                    expr: Literal(
                        Constructor(
                            DataConstructor {
                                modifier: None,
                                ident: ExistsIdent(
                                    ExistsIdent(
                                        "IO",
                                    ),
                                ),
                                args: [],
                            },
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "main",
                ),
                args: AssignArgs {
                    patterns: [],
                },
                expr: Apply(
                    Apply {
                        abstruction: Abstruction {
                            arg: Some(
                                Literal(
                                    Text(
                                        "text",
                                    ),
                                ),
                            ),
                            expr: Ident(
                                Ident(
                                    "|",
                                ),
                            ),
                        },
                        expr: Ident(
                            Ident(
                                "echo",
                            ),
                        ),
                    },
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
    ],
}
