---
source: packages/parser/tests/pds_test.rs
expression: ast
input_file: packages/parser/fixtures/pds/3.pds
---
Module {
    statements: [
        AssignDef(
            AssignDef {
                eta_envs: EtaEnvs(
                    [],
                ),
                ident: Ident(
                    "(|)",
                ),
                expr: TypeExpr {
                    constraints: [],
                    expr: Arrow(
                        Literal(
                            Ident(
                                ForallIdent(
                                    ForallIdent(
                                        "a",
                                    ),
                                ),
                            ),
                        ),
                        Arrow(
                            Arrow(
                                Literal(
                                    Ident(
                                        ForallIdent(
                                            ForallIdent(
                                                "a",
                                            ),
                                        ),
                                    ),
                                ),
                                Literal(
                                    Ident(
                                        ForallIdent(
                                            ForallIdent(
                                                "b",
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            Literal(
                                Ident(
                                    ForallIdent(
                                        ForallIdent(
                                            "b",
                                        ),
                                    ),
                                ),
                            ),
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "(|)",
                ),
                args: AssignArgs {
                    patterns: [
                        Bind(
                            Ident(
                                "f",
                            ),
                        ),
                        Bind(
                            Ident(
                                "g",
                            ),
                        ),
                    ],
                },
                expr: Ident(
                    Ident(
                        "g",
                    ),
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
        AssignDef(
            AssignDef {
                eta_envs: EtaEnvs(
                    [],
                ),
                ident: Ident(
                    "echo",
                ),
                expr: TypeExpr {
                    constraints: [
                        Constraint {
                            ident: ExistsIdent(
                                ExistsIdent(
                                    "Show",
                                ),
                            ),
                            args: [
                                ForallIdent(
                                    ForallIdent(
                                        "a",
                                    ),
                                ),
                            ],
                        },
                    ],
                    expr: Arrow(
                        Literal(
                            Ident(
                                ForallIdent(
                                    ForallIdent(
                                        "a",
                                    ),
                                ),
                            ),
                        ),
                        Literal(
                            Context(
                                ExistsIdent(
                                    ExistsIdent(
                                        "IO",
                                    ),
                                ),
                                Literal(
                                    Tuple(
                                        0,
                                        [],
                                    ),
                                ),
                            ),
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "echo",
                ),
                args: AssignArgs {
                    patterns: [
                        Bind(
                            Ident(
                                "a",
                            ),
                        ),
                    ],
                },
                expr: Ident(
                    Ident(
                        "write",
                    ),
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
        AssignDef(
            AssignDef {
                eta_envs: EtaEnvs(
                    [],
                ),
                ident: Ident(
                    "main",
                ),
                expr: TypeExpr {
                    constraints: [],
                    expr: Literal(
                        Context(
                            ExistsIdent(
                                ExistsIdent(
                                    "IO",
                                ),
                            ),
                            Literal(
                                Tuple(
                                    0,
                                    [],
                                ),
                            ),
                        ),
                    ),
                },
            },
        ),
        Assign(
            Assign {
                ident: Ident(
                    "main",
                ),
                args: AssignArgs {
                    patterns: [],
                },
                expr: Abstruction(
                    Abstruction {
                        left: Abstruction(
                            Abstruction {
                                left: Ident(
                                    Ident(
                                        "|",
                                    ),
                                ),
                                right: Literal(
                                    Text(
                                        "text",
                                    ),
                                ),
                            },
                        ),
                        right: Ident(
                            Ident(
                                "echo",
                            ),
                        ),
                    },
                ),
                where_clause: Module {
                    statements: [],
                },
            },
        ),
    ],
}
