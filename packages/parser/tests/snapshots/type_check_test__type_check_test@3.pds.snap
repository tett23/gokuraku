---
source: packages/parser/tests/type_check_test.rs
expression: ir2
input_file: packages/parser/fixtures/pds/3.pds
---
Ok(
    IR2 {
        ident_symbols: SymbolTable2(
            {
                Ident(
                    "(|)",
                ): (
                    [
                        Function {
                            ident: Ident(
                                "(|)",
                            ),
                            expr: Abstruction {
                                arg: Some(
                                    Bind(
                                        Ident(
                                            "f",
                                        ),
                                    ),
                                ),
                                expr: Abstruction(
                                    Abstruction {
                                        arg: Some(
                                            Bind(
                                                Ident(
                                                    "g",
                                                ),
                                            ),
                                        ),
                                        expr: Abstruction(
                                            Abstruction {
                                                arg: None,
                                                expr: Reference(
                                                    Ident(
                                                        "g",
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                            where_clause: IR2 {
                                ident_symbols: SymbolTable2(
                                    {},
                                ),
                                data_symbols: SymbolTable2(
                                    {},
                                ),
                                handler_symbols: SymbolTable2(
                                    {},
                                ),
                                trait_symbols: SymbolTable2(
                                    {},
                                ),
                                inst_symbols: SymbolTable2(
                                    {},
                                ),
                            },
                        },
                    ],
                    Some(
                        TypeAbstructionEnv {
                            trait_constraints: [],
                            handler_constraints: [],
                            abstruction: Arrow(
                                Term(
                                    Constructor(
                                        DataConstructor(
                                            Structual,
                                            ForallIdent(
                                                ForallIdent(
                                                    "a",
                                                ),
                                            ),
                                            [],
                                        ),
                                    ),
                                ),
                                Arrow(
                                    Arrow(
                                        Term(
                                            Constructor(
                                                DataConstructor(
                                                    Structual,
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "a",
                                                        ),
                                                    ),
                                                    [],
                                                ),
                                            ),
                                        ),
                                        Term(
                                            Constructor(
                                                DataConstructor(
                                                    Structual,
                                                    ForallIdent(
                                                        ForallIdent(
                                                            "b",
                                                        ),
                                                    ),
                                                    [],
                                                ),
                                            ),
                                        ),
                                    ),
                                    Term(
                                        Constructor(
                                            DataConstructor(
                                                Structual,
                                                ForallIdent(
                                                    ForallIdent(
                                                        "b",
                                                    ),
                                                ),
                                                [],
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
                Ident(
                    "echo",
                ): (
                    [
                        Function {
                            ident: Ident(
                                "echo",
                            ),
                            expr: Abstruction {
                                arg: Some(
                                    Bind(
                                        Ident(
                                            "a",
                                        ),
                                    ),
                                ),
                                expr: Abstruction(
                                    Abstruction {
                                        arg: None,
                                        expr: Reference(
                                            Ident(
                                                "write",
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_clause: IR2 {
                                ident_symbols: SymbolTable2(
                                    {},
                                ),
                                data_symbols: SymbolTable2(
                                    {},
                                ),
                                handler_symbols: SymbolTable2(
                                    {},
                                ),
                                trait_symbols: SymbolTable2(
                                    {},
                                ),
                                inst_symbols: SymbolTable2(
                                    {},
                                ),
                            },
                        },
                    ],
                    Some(
                        TypeAbstructionEnv {
                            trait_constraints: [
                                TraitConstraint {
                                    ident: TraitIdent(
                                        "Show",
                                    ),
                                    arg: ForallIdent(
                                        "a",
                                    ),
                                },
                            ],
                            handler_constraints: [],
                            abstruction: Arrow(
                                Term(
                                    Constructor(
                                        DataConstructor(
                                            Structual,
                                            ForallIdent(
                                                ForallIdent(
                                                    "a",
                                                ),
                                            ),
                                            [],
                                        ),
                                    ),
                                ),
                                Term(
                                    Constructor(
                                        DataConstructor(
                                            Structual,
                                            ExistsIdent(
                                                ExistsIdent(
                                                    "IO",
                                                ),
                                            ),
                                            [],
                                        ),
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
                Ident(
                    "main",
                ): (
                    [
                        Function {
                            ident: Ident(
                                "main",
                            ),
                            expr: Abstruction {
                                arg: None,
                                expr: Apply(
                                    Apply {
                                        abstruction: Abstruction {
                                            arg: Some(
                                                Literal(
                                                    Text(
                                                        "text",
                                                    ),
                                                ),
                                            ),
                                            expr: Reference(
                                                Ident(
                                                    "|",
                                                ),
                                            ),
                                        },
                                        expr: Reference(
                                            Ident(
                                                "echo",
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_clause: IR2 {
                                ident_symbols: SymbolTable2(
                                    {},
                                ),
                                data_symbols: SymbolTable2(
                                    {},
                                ),
                                handler_symbols: SymbolTable2(
                                    {},
                                ),
                                trait_symbols: SymbolTable2(
                                    {},
                                ),
                                inst_symbols: SymbolTable2(
                                    {},
                                ),
                            },
                        },
                    ],
                    Some(
                        TypeAbstructionEnv {
                            trait_constraints: [],
                            handler_constraints: [],
                            abstruction: Term(
                                Constructor(
                                    DataConstructor(
                                        Structual,
                                        ExistsIdent(
                                            ExistsIdent(
                                                "IO",
                                            ),
                                        ),
                                        [],
                                    ),
                                ),
                            ),
                        },
                    ),
                ),
            },
        ),
        data_symbols: SymbolTable2(
            {},
        ),
        handler_symbols: SymbolTable2(
            {},
        ),
        trait_symbols: SymbolTable2(
            {},
        ),
        inst_symbols: SymbolTable2(
            {},
        ),
    },
)
